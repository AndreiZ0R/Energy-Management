services:
  # ----------- RabbitMQ Server -----------
  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq_server
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - services-net

  # ----------- Eureka Service Discovery -----------
  eureka-sd:
    build:
      context: ./backend/eureka-service-discovery
      dockerfile: Dockerfile
    container_name: eureka-service-discovery
    ports:
      - "8761:8761"
    volumes:
      - ./backend/eureka-service-discovery:/app
    networks:
      - services-net
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8761" ]
      interval: 10s
      timeout: 10s
      retries: 10

  # ----------- Gateway Service -----------
  api-gateway:
    build:
      context: ./backend/energy-management-gateway
      dockerfile: Dockerfile
    container_name: energy-management-gateway
    ports:
      - "8000:8000"
    volumes:
      - ./backend/energy-management-gateway:/app
    depends_on:
      eureka-sd:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-service-discovery:8761/eureka
    networks:
      - services-net

  # ----------- USER-MANAGEMENT-SERVICE -----------
  ums:
    build:
      context: ./backend/user-management-service
      dockerfile: Dockerfile
    container_name: user-management-service
    ports:
      - "8001:8001"
    volumes:
      - ./backend/user-management-service:/app
    depends_on:
      eureka-sd:
        condition: service_healthy
      api-gateway:
        condition: service_started
      rabbitmq:
        condition: service_started
      ums_db:
        condition: service_started
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://ums_db:5432/ums_db
      EUREKA_URL: http://eureka-service-discovery:8761/eureka
      RABBIT_HOST: rabbitmq_server
    networks:
      - services-net

  ums_db:
    image: postgres
    container_name: ums_db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ums_db
      PG_DATA: /var/lib/postgresql/data
    ports:
      - "5433:5432"
    volumes:
      - ums_db:/var/lib/postgresql/data
    networks:
      - services-net
    restart: unless-stopped

  # ----------- DEVICE-MANAGEMENT-SERVICE -----------
  dms:
    build:
      context: ./backend/device-management-service
      dockerfile: Dockerfile
    container_name: device-management-service
    ports:
      - "8002:8002"
    volumes:
      - ./backend/device-management-service:/app
    depends_on:
      eureka-sd:
        condition: service_healthy
      api-gateway:
        condition: service_started
      rabbitmq:
        condition: service_started
      dms_db:
        condition: service_started
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://dms_db:5432/dms_db
      EUREKA_URL: http://eureka-service-discovery:8761/eureka
      RABBIT_HOST: rabbitmq_server
    networks:
      - services-net

  dms_db:
    image: postgres
    container_name: dms_db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: dms_db
      PG_DATA: /var/lib/postgresql/data
    ports:
      - "5434:5432"
    volumes:
      - dms_db:/var/lib/postgresql/data
    networks:
      - services-net
    restart: unless-stopped

  # ----------- MONITORING-COMMUNICATION-SERVICE -----------
  mcs:
    build:
      context: ./backend/monitoring-communication-service
      dockerfile: Dockerfile
    container_name: monitoring-communication-service
    ports:
      - "8003:8003"
    volumes:
      - ./backend/monitoring-communication-service:/app
    depends_on:
      eureka-sd:
        condition: service_healthy
      api-gateway:
        condition: service_started
      rabbitmq:
        condition: service_started
      mcs_db:
        condition: service_started
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://mcs_db:5432/mcs_db
      EUREKA_URL: http://eureka-service-discovery:8761/eureka
      RABBIT_HOST: rabbitmq_server
    networks:
      - services-net

  mcs_db:
    image: postgres
    container_name: mcs_db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: mcs_db
      PG_DATA: /var/lib/postgresql/data
    ports:
      - "5435:5432"
    volumes:
      - mcs_db:/var/lib/postgresql/data
    networks:
      - services-net
    restart: unless-stopped

  # ----------- Frontend -----------
  frontend:
    build:
      context: ./energy-management-ui
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - './energy-management-ui/src:/app/src'
    #      - './data:/app/data'
    depends_on:
      eureka-sd:
        condition: service_healthy
      api-gateway:
        condition: service_started
      ums:
        condition: service_started
      dms:
        condition: service_started
    environment:
      API_URL: http://energy-management-gateway:8000
      WS_URL: http://monitoring-communication-service:8003
    networks:
      - services-net

# ----------- Networking -----------
networks:
  services-net:
    driver: bridge

# ----------- Volumes -----------
volumes:
  ums_db:
  dms_db:
  mcs_db:

# Todo: healthcheck for services gateway needs